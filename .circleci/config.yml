# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      
      # Bring in the docker builder
      - image: docker:18.05.0-ce-git
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    
    steps:
      - checkout
      - setup_remote_docker
      
      # Restore the Docker application cache
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
            
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      # run tests!
      - run: mvn integration-test
         
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i ~/.caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .        
#      - run: docker build -t "spring-rest:1.0.0"
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p ~/.caches
            docker save -o ~/.caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - ~/.caches/app.tar
      - store_test_results:
          path: target/surefire-reports
      
      - store_artifacts:
          path: target/spring-rest-0.0.1-SNAPSHOT.jar